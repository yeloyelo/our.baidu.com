#用户默认的连接环境spring:  profiles:    active: dev #改属性,代表用哪个环境---   #分割线 8000 定义为生成环境prod  8005 端口定义为dev开发环境server:  port: 8000  servlet:    context-path: /spring:  profiles: prod  #定义生成环境  datasource:    #引入druid数据源    type: com.alibaba.druid.pool.DruidDataSource    driver-class-name: com.mysql.jdbc.Driver    url: jdbc:mysql://127.0.0.1:3306/jtdb?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true    username: root    password: root    application:   #定义服务名称    name: provider-user    eureka:  client:    service-url:      defaultZone: http://localhost:7000/eureka  instance:    instance-id: provider-user-8000                #定义微服务的名称    prefer-ip-address: true                        #是否显示IP和端口                       #是否显示IP和端口#mybatis-plush配置mybatis-plus:  type-aliases-package: com.jt.springcloud.pojo       #配置别名包路径  mapper-locations: classpath:/mybatis/mappers/*.xml  #添加mapper映射文件  configuration:    map-underscore-to-camel-case: true                #开启驼峰映射规则---  #8005端口生成环境server:  port: 8005  servlet:    context-path: /spring:  profiles: dev  #定义生成环境  datasource:    #引入druid数据源    type: com.alibaba.druid.pool.DruidDataSource    driver-class-name: com.mysql.jdbc.Driver    url: jdbc:mysql://127.0.0.1:3306/jtdb?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true    username: root    password: root    application:   #定义服务名称    name: provider-user    eureka:  client:    service-url:      defaultZone: http://localhost:7000/eureka  instance:    instance-id: provider-user-8005                #定义微服务的名称    prefer-ip-address: true                        #是否显示IP和端口                       #是否显示IP和端口#mybatis-plush配置mybatis-plus:  type-aliases-package: com.jt.springcloud.pojo       #配置别名包路径  mapper-locations: classpath:/mybatis/mappers/*.xml  #添加mapper映射文件  configuration:    map-underscore-to-camel-case: true                #开启驼峰映射规则